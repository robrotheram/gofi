{"version":3,"sources":["components/NavBar.js","utils/index.js","components/items.js","react-node-graph/lib/NodeInputListItem.js","react-node-graph/lib/NodeInputList.js","react-node-graph/lib/NodeOutputListItem.js","react-node-graph/lib/NodeOutputList.js","react-node-graph/lib/styles/node.js","components/StatusIcon.js","utils/gofiAPI.js","components/Notify.js","actions/index.js","react-node-graph/lib/Node.js","react-node-graph/lib/TrashIcon.js","react-node-graph/lib/Spline.js","react-node-graph/lib/SVGComponent.js","react-node-graph/lib/util.js","react-node-graph/index.js","components/Controls.js","components/EditModal.js","components/GraphList.js","pages/Content.js","pages/Home.js","pages/Admin.js","components/Footer.js","App.js","reducers/visibilityFilter.js","reducers/todo.js","reducers/editNode.js","reducers/index.js","registerServiceWorker.js","index.js"],"names":["NavBar","_ref","onChange","onSearch","react_default","a","createElement","className","style","margin","href","textDecoration","color","defaultProps","newValue","console","log","identity","split","x","menuItems","key","name","ariaLabel","onClick","items","canCheck","checked","icon","disabled","farMenuItems","NodeInputListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hover","e","stopPropagation","preventDefault","onMouseUp","index","setState","_this2","noop","onMouseOver","onMouseOut","React","Component","NodeInputList","i","onCompleteConnector","NodeInputListItem_NodeInputListItem","NodeOutputListItem","onMouseDown","NodeOutputList","onStartConnector","NodeOutputListItem_NodeOutputListItem","styles_node","position","width","padding","borderRadius","WebkitBoxShadow","MozBoxShadow","boxShadow","userSelect","zIndex","StatusIcon","classNme","Graph","graph","id","nodes","description","connections","undefined","map","node","params","list","val","fields","in","out","Gofi","getStatus","then","data","status","GofiAPI","baseurl","g","Array","isArray","_g","axios","get","response","processGraphs","_this3","put","_this4","_this5","delete","nid","_this6","post","_this7","connection","_this8","cid","_this9","_this10","_this11","notifier","cb","message","type","appearance","autoDismiss","Provider","withToastManager","_React$Component","_class","apply","arguments","inherits","createClass","value","Notifier","register","toastManager","add","Notify","dist","nextTodoId","addTodo","text","toggleModal","setModal","mtype","model","mode","VisibilityFilters","Draggable","require","Startbtn","start","onclicked","nextProps","nextContext","Icon","iconName","Node","_closeModal","showModal","_showModal","JSON","parse","meta","title","selected","graphid","interval","setInterval","clearInterval","event","ui","onNodeStart","onNodeStop","y","onNodeMove","onNodeSelect","onNodeDeselect","item","column","Link","data-selection-invoke","startProcess","createAlert","stopProcess","deleteNode","grid","tlist","onDoubleClick","handleClick","pos","handle","onStart","handleDragStart","onStop","handleDragStop","onDrag","handleDrag","nodestyle","NodeInputList_NodeInputList","inputs","NodeOutputList_NodeOutputList","outputs","height","backgroundColor","fontSize","top","right","components_StatusIcon","Node_Startbtn","switchProcess","received_msg","sent_msg","mapDispatchToProps","connect","todos","onClickOutside","TrashIcon","fill","stroke","strokeWidth","transform","concat","cx","cy","r","d","Spline","mousePos","onRemove","startX","startY","endX","endY","arc1","arc2","deltaX","deltaY","vf","Math","abs","_this$state","_this$props","end","pathString","drawPath","strokeDasharray","TrashIcon_TrashIcon","handleRemove","b","cp1x","cp1y","cp2x","cp2y","sqrt","SVGComponent","assign","ref","children","computeOutOffsetByIndex","source","dragging","onMouseMove","bind","assertThisInitialized","document","addEventListener","removeEventListener","svgRect","refs","svgComponent","svg","getBoundingClientRect","pageX","left","pageY","onNodeStartMove","h","max","o","Infinity","body","clientWidth","outputIndex","inputIndex","fromNode","getNodebyId","toNode","onNewConnector","connector","onRemoveConnector","pins","pinLabel","reval","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","connectors","newConnector","calculateHeight","calculateWidth","sourceNode","connectorStart","connectorEnd","lib_Spline","splineIndex","lib_Node","handleNodeStart","handleNodeStop","handleNodeMove","handleStartConnector","handleCompleteConnector","handleNodeSelect","handleNodeDeselect","SVGComponent_SVGComponent","input_node","output_node","splinestart","splineend","handleRemoveConnector","Controls","getItems","iconProps","context","router","history","goBack","cacheKey","subMenuProps","prop","toLowerCase","createNode","export","getFarItems","alert","iconOnly","view","CommandBar","farItems","Notify_Notify","contextTypes","PropTypes","object","editNode","EditModal","inputChangeHandlerParams","target","submitChangeHandler","stringify","_that","catch","error","cancelChangeHandler","parmas","filter","Modal","titleAriaId","subtitleAriaId","isOpen","onDismiss","isBlocking","containerClassName","IconButton","TextField","label","placeholder","required","float","marginTop","DefaultButton","data-automation-id","allowDisabledFocus","PrimaryButton","GraphList","getAlldata","prom","push","Promise","all","v","_columns","fieldName","minWidth","maxWidth","isPadded","onRender","DetailsList","compact","columns","selectionMode","SelectionMode","none","setKey","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","Content","_onSelectionChanged","_hasMounted","forceUpdate","toggle","viewtoggle","paramsList","match","exportToggle","viewToggle","getGraph","length","createConnection","deleteConnection","_node","updateNode","obj","ceil","clientX","clientY","components_Controls","components_EditModal","components_GraphList","react_node_graph_index","n1","n2","margin-top","overflow","main_default","displayDataTypes","displayObjectSize","enableClipboard","src","maxBreadcrumbs","breadcrumbs","defaultMenuItems","defaultFarMenuItems","Home","_editModal","window","location","createGraph","graphs","toConsumableArray","editGraph","_showDialog","hideDialog","_closeDialog","_DeleteDialog","deleteGraph","getAllGraphs","dir","DocumentCard","es_Link","to","DocumentCardTitle","shouldTruncate","showAsSecondaryTitle","DocumentCardStatus","statusIcon","Dialog","hidden","dialogContentProps","DialogType","normal","subText","modalProps","DialogFooter","background","multiline","rows","AdminCard","DocumentCardType","worker","ip","memory_used","memory_total","memory_percent","toFixed","load","stats","Admin","health","getHealth","keys","Admin_AdminCard","Footer","About","NoMatch","textAlign","pathname","App","getParams","store","dispatch","Fabric","components_NavBar","Switch","Route","default","exact","path","component","components_Footer","visibilityFilter","action","completed","todo","objectSpread","defaultState","combineReducers","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createHistory","middleware","thunk","routerMiddleware","initializeIcons","composedEnhancers","compose","applyMiddleware","createStore","connectRouter","rootReducer","ReactDOM","render","es","HashRouter","src_App_0","getElementById","URL","process","origin","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aa3a8ce1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst NavBar = ({ onChange, onSearch }) => (\n  <div className=\"NavBar\">\n    <div className=\"logo ms-font-xl\" style={{\"margin\":\"0 auto\"}}>\n      <a href={\"/\"} style={{\"textDecoration\": \"none\", \"color\": \"white\" }} ><strong>GoFi</strong></a>\n    </div>\n  </div>\n);\n\nNavBar.propTypes = {\n  onChange: PropTypes.func,\n  onSearch: PropTypes.func\n};\n\nNavBar.defaultProps = {\n  onChange: (newValue) => console.log('SearchBox onChange fired: ' + newValue),\n  onSearch: (newValue) => console.log('SearchBox onSearch fired: ' + newValue)\n};\n\nexport default NavBar;\n","const LOREM_IPSUM_WORDS = ('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut ' +\n  'labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut ' +\n  'aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore ' +\n  'eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt ' +\n  'mollit anim id est laborum').split(' ');\nconst COLORS = ['red', 'blue', 'green', 'yellow'];\nconst SHAPES = ['circle', 'square', 'triangle'];\nconst LOCATIONS = ['Seattle', 'New York', 'Chicago', 'Los Angeles', 'Portland'];\n/**\n * Returns a random element from the provided list.\n * @param {Array} list List from were to take elements.\n * @return {Any} Random element from the list.\n */\nexport const randomFrom = list => (\n  list[Math.floor(Math.random() * list.length)]\n);\n/**\n * Returns a string of random lorem ipsum words of the size needed.\n * @param {Number} wordCount The lenght in words of the string.\n * @return {String} Random string of lorem ipsum words.\n */\nexport const lorem = wordCount => (\n  Array.apply(null, Array(wordCount))\n    .map(item => randomFrom(LOREM_IPSUM_WORDS))\n    .join(' ')\n);\n/**\n * identity function. Taekes a value and returns it.\n * @param {Any} x Any value.\n * @return {Any} returns the given value.\n */\nexport const identity = x => x;\n/**\n * Creates a valid selection item\n * @param {Number} count Number of items to return.\n * @param {Number} count Index to start the count. Defaults to 0.\n * @return {Array} List of valid selection items.\n */\nexport const createListItems = (count, startIndex = 0) => (\n  Array.apply(null, Array(count))\n    .map((item, index) => {\n      let size = 150 + Math.round(Math.random() * 100);\n      return {\n        thumbnail: `//placehold.it/${size}x${size}`,\n        key: `${item}-${index + startIndex} ${lorem(4)}`,\n        name: lorem(5),\n        description: lorem(10 + Math.round(Math.random() * 50)),\n        color: randomFrom(COLORS),\n        shape: randomFrom(SHAPES),\n        location: randomFrom(LOCATIONS),\n        width: size,\n        height: size\n      };\n    })\n);\n\nexport const exampleGraph = {\n    nodes: [\n        {\n            nid: 1,\n            type: \"WebGL2.0Renderer\",\n            x: 800,\n            y: 350,\n            fields: {\n                in: [\n                    {\n                        name: \"width\"\n                    },\n                    {\n                        name: \"height\"\n                    },\n                    {\n                        name: \"scene\"\n                    },\n                    {\n                        name: \"camera\"\n                    },\n                    {\n                        name: \"bg_color\"\n                    },\n                    {\n                        name: \"postfx\"\n                    },\n                    {\n                        name: \"shadowCameraNear\"\n                    },\n                    {\n                        name: \"shadowCameraFar\"\n                    },\n                    {\n                        name: \"shadowMapWidth\"\n                    },\n                    {\n                        name: \"shadowMapHeight\"\n                    },\n                    {\n                        name: \"shadowMapEnabled\"\n                    },\n                    {\n                        name: \"shadowMapSoft\"\n                    }\n                ],\n                \"out\": []\n            }\n        },\n        {\n            nid: 14,\n            type: \"Camera\",\n            x: 200,\n            y: 420,\n            fields: {\n                in: [\n                    {\n                        name: \"fov\"\n                    },\n                    {\n                        name: \"aspect\"\n                    },\n                    {\n                        name: \"near\"\n                    },\n                    {\n                        name: \"far\"\n                    },\n                    {\n                        name: \"position\"\n                    },\n                    {\n                        name: \"target\"\n                    },\n                    {\n                        name: \"useTarget\"\n                    }\n                ],\n                \"out\": [\n                    {\n                        name: \"out\"\n                    }\n                ]\n            }\n        },\n        {\n            nid: 23,\n            type: \"Scene\",\n            x: 200,\n            y: 200,\n            fields: {\n                in: [\n                    {\n                        name: \"children\"\n                    },\n                    {\n                        name: \"position\"\n                    },\n                    {\n                        name: \"rotation\"\n                    },\n                    {\n                        name: \"scale\"\n                    },\n                    {\n                        name: \"doubleSided\"\n                    },\n                    {\n                        name: \"visible\"\n                    },\n                    {\n                        name: \"castShadow\"\n                    },\n                    {\n                        name: \"receiveShadow\"\n                    }\n                ],\n                \"out\": [\n                    {\n                        name: \"out\"\n                    }\n                ]\n            }\n        },\n        {\n            nid: \"simc423ln\",\n            type: \"Vector3\",\n            x: 800,\n            y: 200,\n            fields: {\n                in: [\n                    {\n                        name: \"xyz\"\n                    },\n                    {\n                        name: \"x\"\n                    },\n                    {\n                        name: \"y\"\n                    },\n                    {\n                        name: \"z\"\n                    }\n                ],\n                \"out\": [\n                    {\n                        name: \"xyz\"\n                    },\n                    {\n                        name: \"x\"\n                    },\n                    {\n                        name: \"y\"\n                    },\n                    {\n                        name: \"z\"\n                    }\n                ]\n            }\n        },\n        {\n            nid: \"ehtkga34x\",\n            type: \"Vector3\",\n            x: 200,\n            y: 50,\n            fields: {\n                in: [\n                    {\n                        name: \"xyz\"\n                    },\n                    {\n                        name: \"x\"\n                    },\n                    {\n                        name: \"y\"\n                    },\n                    {\n                        name: \"z\"\n                    }\n                ],\n                \"out\": [\n                    {\n                        name: \"xyz\"\n                    },\n                    {\n                        name: \"x\"\n                    },\n                    {\n                        name: \"y\"\n                    },\n                    {\n                        name: \"z\"\n                    }\n                ]\n            }\n        }\n    ],\n    connections: [\n        {\n            from_node: 23,\n            from: \"out\",\n            to_node: 1,\n            to: \"scene\"\n        },\n        {\n            from_node: 14,\n            from: \"out\",\n            to_node: 1,\n            to: \"shadowMapWidth\"\n        },\n        {\n            from_node: \"ehtkga34x\",\n            from: \"xyz\",\n            to_node: \"simc423ln\",\n            to: \"x\"\n        }\n    ]\n};\n","import { identity } from '../utils/';\n\nexport const menuItems = [{\n  key: 'newItem',\n  name: 'Selection Mode',\n  ariaLabel: 'Selection Mode',\n  onClick: identity,\n  items: [{\n    key: 'selectionModeNone',\n    name: 'None',\n    canCheck: true,\n    checked: false\n  }, {\n    key: 'selectionModeSingle',\n    name: 'Single Mode',\n    canCheck: true,\n    checked: true\n  }, {\n    key: 'selectionModeMulti',\n    name: 'Multi Mode',\n    canCheck: true,\n    checked: false\n  }]\n}, {\n  key: 'upload',\n  name: 'Upload',\n  icon: 'Upload',\n  onClick: identity\n}, {\n  key: 'share',\n  name: 'Share',\n  icon: 'Share',\n  onClick: identity\n}, {\n  key: 'download',\n  name: 'Download',\n  icon: 'Download',\n  onClick: identity\n}, {\n  key: 'move',\n  name: 'Move to...',\n  icon: 'MoveToFolder',\n  onClick: identity\n}, {\n  key: 'copy',\n  name: 'Copy to...',\n  icon: 'Copy',\n  onClick: identity\n}, {\n  key: 'rename',\n  name: 'Rename...',\n  icon: 'Edit',\n  onClick: identity\n}, {\n  key: 'disabled',\n  name: 'Disabled...',\n  icon: 'Cancel',\n  disabled: true,\n  onClick: identity\n}];\n\nexport const farMenuItems = [{\n  key: 'sort',\n  name: 'Sort',\n  icon: 'SortLines',\n  onClick: identity\n}, {\n  key: 'tile',\n  name: 'Grid view',\n  icon: 'Tiles',\n  onClick: identity\n}, {\n  key: 'info',\n  name: 'Info',\n  icon: 'Info',\n  onClick: identity\n}];","import React from 'react';\n\nexport default class NodeInputListItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thover: false\n\t\t}\n\t}\n\n\tonMouseUp(e) {\n\t\te.stopPropagation();\n  \t\te.preventDefault();\n\n\t\tthis.props.onMouseUp(this.props.index);\n\t}\n\n  onMouseOver() {\n\t\tthis.setState({hover: true});\n\t}\n\n\tonMouseOut() {\n    this.setState({hover: false});\n  }\n\n\tnoop(e) {\n\t\te.stopPropagation();\n  \t\te.preventDefault();\n\t}\n\n\trender() {\n\t\treturn (\n                <div className=\"circle circle-right\"\n\t\t\t\t\t onClick={(e)=>this.noop(e)}\n\t\t\t\t\t onMouseUp={(e)=>this.onMouseUp(e)}\n\t\t\t\t\t onMouseOver={() => {this.onMouseOver()}}\n\t\t\t\t\t onMouseOut={() => {this.onMouseOut()}}\n\t\t\t\t\t/>\n\n\t\t);\n\t}\n}\n","import React from 'react';\n\nimport NodeInputListItem from './NodeInputListItem';\n\nexport default class NodeInputList extends React.Component {\n\n\tonMouseUp(i) {\n\t\tthis.props.onCompleteConnector(i);\n\t}\n\n\trender() {\n\t\tlet i = 0;\n\n\t\treturn (\n\t\t\t<div>\n                <NodeInputListItem onMouseUp={(i)=>this.onMouseUp(i)} key={i} index={i++} />\n\t\t\t\t\t{/*{this.props.items.map((item) => {*/}\n\t\t\t\t\t\t{/*return (*/}\n\t\t\t\t\t\t\t{/*<NodeInputListItem onMouseUp={(i)=>this.onMouseUp(i)} key={i} index={i++} item={item} />*/}\n\t\t\t\t\t\t{/*)*/}\n\t\t\t\t\t{/*})}*/}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\n\nexport default class NodeOutputListItem extends React.Component {\n\n\tonMouseDown(e) {\n\t\te.stopPropagation();\n  \t\te.preventDefault();\n\n\t\tthis.props.onMouseDown(this.props.index);\n\t}\n\n\tnoop(e) {\n\t\te.stopPropagation();\n  \t\te.preventDefault();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"circle circle-left\" onMouseDown={(e)=>this.onMouseDown(e)} onClick={(e)=>this.noop(e)}>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\n\nimport NodeOutputListItem from './NodeOutputListItem';\n\nexport default class NodeOutputList extends React.Component {\n\n\tonMouseDown(i) {\n\t\tthis.props.onStartConnector(i);\n\t}\n\n\trender() {\n\t\tlet i = 0;\n\n\t\treturn (\n\t\t\t<div>\n                <NodeOutputListItem onMouseDown={(i)=>this.onMouseDown(i)} key={i} index={i++}  />\n\t\t\t\t\t{/*{this.props.items.map((item) => {*/}\n\t\t\t\t\t\t{/*return (*/}\n\t\t\t\t\t\t\t{/*<NodeOutputListItem onMouseDown={(i)=>this.onMouseDown(i)} key={i} index={i++} item={item} />*/}\n\t\t\t\t\t\t{/*)*/}\n\t\t\t\t\t{/*})}*/}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export default {\n  position: \"absolute\",\n  width: 300,\n  padding:\"5px\",\n  borderRadius: 4,\n  WebkitBoxShadow: \"6px 6px 28px -2px rgba(0,0,0,0.4)\",\n  MozBoxShadow: \"6px 6px 28px -2px rgba(0,0,0,0.4)\",\n  boxShadow: \"6px 6px 28px -2px rgba(0,0,0,0.4)\",\n  userSelect: \"none\",\n  zIndex: 1000\n};\n","import React from \"react\";\n\n/*\npending\npassed\noffered\nactive\nlost\ncomplete\nwaiting\n*/\n\n\nclass StatusIcon extends React.Component {\n    render() {\n        let classNme = \"status grow \";\n        switch (this.props.icon) {\n            case \"REGISTERED\":\n                classNme += \"pending\"; break;\n\n            case \"ACTIVE\":\n                classNme += \"running\"; break;\n\n            case \"INACTIVE\":\n                classNme += \"error\"; break;\n\n            case \"STOPPED\":\n                classNme += \"stopped\"; break;\n\n            default:\n                classNme += \"error\" ; break;\n        }\n        return (\n                <div className={classNme} style={this.props.style}></div>\n\n        );\n    }\n}\n\nexport default StatusIcon;\n\n","\nimport axios from 'axios'\n\nclass Graph {\n    constructor(graph){\n        this.id = graph.id;\n        this.name = graph.name;\n        this.nodes = graph.nodes;\n        this.description = graph.description\n        this.connections = graph.connections;\n        if( graph.connections === null || graph.connections === undefined){\n            this.connections = []\n        }\n        if( graph.nodes === null || graph.nodes === undefined){\n            this.nodes = []\n        }\n     //   this.processNode()\n    }\n\n    processNode(){\n        this.nodes =  this.nodes.map(node => {\n            node.params = \"\";\n            node.list = [{name: \"test\",val: \"value\"}];\n            node.fields = {\n                \"in\": [{\"name\": \"960c6741-e39c-4b0e-b6c6-9f699e3a3cf5\"}],\n                \"out\": [{\"name\": \"960c6741-e39c-4b0e-b6c6-9f699e3a3cf5\"}]\n            }\n            return node\n        })\n    }\n\n    getStatus(node){\n        Gofi.getStatus(node.id).then(data => {\n                node.status = data\n            }\n        )\n    }\n\n    getGraph(){\n        return this;\n    }\n}\n\nclass GofiAPI {\n    constructor() {\n        this.baseurl = \"\"\n        if (process.env.NODE_ENV === 'development') {\n            this.baseurl = \"http://localhost:8000\"\n        }\n    }\n    processGraphs(g){\n        if(Array.isArray(g)){\n            return g.map(_g => new Graph(_g))\n        } else {\n            return new Graph(g)\n        }\n    }\n    getAllGraphs(){\n        return axios.get(this.baseurl+\"/graph\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n    getGraph(id){\n        return axios.get(this.baseurl+\"/graph/\"+id).then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n    createNode(id, node){\n        return axios.put(this.baseurl+\"/graph/\"+id+\"/node\", node).then(response => {\n            console.log(\"NODE\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    createGraph(graph){\n        return axios.put(this.baseurl+\"/graph\", graph).then(response => {\n            console.log(\"GRAPH\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    deleteGraph(id){\n        return axios.delete(this.baseurl+\"/graph/\"+id).then(response => {\n            console.log(\"GRAPH\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    editNode(id, node, nid){\n        return axios.post(this.baseurl+\"/graph/\"+id+\"/node/\"+nid, node).then(response => {\n            console.log(\"NODE\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    editGraph(id, graph){\n        return axios.post(this.baseurl+\"/graph/\"+id, graph).then(response => {\n            console.log(\"graph\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    createConnection(id, connection){\n        return axios.put(this.baseurl+\"/graph/\"+id+\"/connection\", connection).then(response => {\n            console.log(\"connection\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    deleteConnection(id, cid){\n        return axios.delete(this.baseurl+\"/graph/\"+id+\"/connection/\"+cid).then(response => {\n            console.log(\"connection\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    updateNode(id, node){\n        return axios.post(this.baseurl+\"/graph/\"+id+\"/node/\"+node.id, node).then(response => {\n            console.log(\"NODE\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    deleteNode(id, nid){\n        return axios.delete(this.baseurl+\"/graph/\"+id+\"/node/\"+nid).then(response => {\n            console.log(\"node\", response)\n            // returning the data here allows the caller to get it through another .then(...)\n            return this.processGraphs(response.data)\n        })\n    }\n\n    startProcess(id){\n        return axios.get(this.baseurl+\"/pipeline/\"+id+\"/start\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return response.data\n        })\n    }\n\n    startProcess(id){\n        return axios.get(this.baseurl+\"/pipeline/\"+id+\"/start\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return response.data\n        })\n    }\n\n    stopProcess(id){\n        return axios.get(this.baseurl+\"/pipeline/\"+id+\"/stop\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return response.data\n        })\n    }\n\n    getStatus(id){\n        return axios.get(this.baseurl+\"/pipeline/\"+id+\"/status\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return response.data\n        })\n    }\n\n    getParams(){\n        return axios.get(this.baseurl+\"/pipeline/params\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return response.data\n        })\n    }\n\n    getHealth(){\n        return axios.get(this.baseurl+\"/controller/health\").then(response => {\n            return response.data\n        })\n    }\n\n}\nconst Gofi = new GofiAPI()\nexport {Gofi, Graph }\n","import React from 'react';\nimport {ToastProvider, withToastManager } from 'react-toast-notifications';\n\nclass notifier {\n    constructor(){\n        this.cb = {}\n    }\n    register(cb) {\n        this.cb = cb;\n    }\n    createAlert(message, type) {\n        if (type === undefined) {\n            type = \"error\"\n        }\n        this.cb(message,{ appearance: type, autoDismiss: true })\n    }\n}\n\nlet Provider = withToastManager(class extends React.Component {\n    componentDidMount() {\n            Notifier.register(this.props.toastManager.add)\n    }\n    render() {\n        return null\n    }\n});\n\nclass Notify extends React.Component {\n    render() {\n        return (\n            <div style={{\"zIndex\":\"10\"}}>\n                <ToastProvider>\n                    <Provider/>\n                </ToastProvider>\n            </div>\n        );\n    }\n}\nlet Notifier = new notifier()\nexport { Notifier, Notify }","let nextTodoId = 0\nexport const addTodo = text => ({\n    type: 'ADD_TODO',\n    id: nextTodoId++,\n    text\n})\n\nexport const setVisibilityFilter = filter => ({\n    type: 'SET_VISIBILITY_FILTER',\n    filter\n})\n\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n})\nexport const toggleModal = () => ({\n    type: 'TOGGLE_MODAL'\n})\n\nexport const setModal = (mtype, model,params, mode, id) => ({\n    type: 'SET_MODAL',\n    mtype: mtype,\n    model: model,\n    params: params,\n    mode: mode,\n    id: id\n})\n\nexport const paramsList = (list) => ({\n    type: 'SET_LIST',\n    list\n})\n\n\nexport const VisibilityFilters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import React from \"react\";\nimport onClickOutside from \"react-onclickoutside\";\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport NodeInputList from \"./NodeInputList\";\nimport NodeOuputList from \"./NodeOutputList\";\n\nimport nodestyle from \"./styles/node\";\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport StatusIcon from '../../components/StatusIcon'\nimport {Gofi} from \"../../utils/gofiAPI\";\nimport {Notifier} from \"../../components/Notify\";\nimport {addTodo, setModal, toggleModal} from \"../../actions\";\nimport connect from \"react-redux/es/connect/connect\";\n\n\nvar Draggable = require(\"react-draggable\");\n\nclass Startbtn extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            start: props.start,\n            cb: props.onclicked\n        }\n    }\n    onclicked(){\n        this.setState({start: !this.state.start})\n        this.state.cb();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({start: nextProps.start})\n    }\n\n    render() {\n        const start = this.state.start;\n        return (\n            <li>\n                {start ? (\n                    <a onClick={() =>{this.onclicked()}}><Icon iconName=\"Play\"/></a>\n                ) : (\n                    <a onClick={() =>{this.onclicked()}}><Icon iconName=\"Stop\"/></a>\n                )}\n            </li>\n        );\n    }\n\n}\n\nclass Node extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selected: false,\n        status: \"\",\n        nid: props.nid,\n        showModal: false,\n        graphid: props.graphid\n\n    };\n  }\n\n    getStatus(){\n      Gofi.getStatus(this.state.nid).then(\n        status => {\n            this.setState({status:status})\n        }\n    );\n  }\n  componentDidMount() {\n      this.getStatus();\n      this.interval = setInterval(() => {this.getStatus()}, 1000);\n  }\n\n  componentWillUnmount() {\n      clearInterval(this.interval);\n  }\n\n    handleDragStart(event, ui) {\n    this.props.onNodeStart(this.props.nid, ui);\n  }\n\n  handleDragStop(event, ui) {\n    this.props.onNodeStop(this.props.nid, { x: ui.x, y: ui.y });\n  }\n\n  handleDrag(event, ui) {\n    this.props.onNodeMove(this.props.index, { x: ui.x, y: ui.y });\n  }\n\n  onStartConnector(index) {\n    this.props.onStartConnector(this.props.nid, index);\n  }\n\n  onCompleteConnector(index) {\n    this.props.onCompleteConnector(this.props.nid, index);\n  }\n\n  handleClick(e) {\n    this.setState({ selected: true });\n    if (this.props.onNodeSelect) {\n      this.props.onNodeSelect(this.props.nid);\n    }\n  }\n\n  handleClickOutside() {\n    let { selected } = this.state;\n    if (this.props.onNodeDeselect && selected) {\n      this.props.onNodeDeselect(this.props.nid);\n    }\n    this.setState({ selected: false });\n  }\n\n\n    _onRenderItemColumn(item, index, column) {\n        if (column.key === 'WebUrl') {\n            return <Link data-selection-invoke={ true }>{ item[column.key] }</Link>;\n        }\n        return item[column.key];\n    }\n\n\n    switchProcess(){\n      if(this.state.status.status!==\"ACTIVE\"){\n          Gofi.startProcess(this.props.nid).then(data =>{\n              Notifier.createAlert(\"Node: \"+this.props.title+\" has been started\", \"success\")\n\n          });\n      }else{\n          Gofi.stopProcess(this.props.nid).then(data =>{\n              Notifier.createAlert(\"Node: \"+this.props.title+\" has been stopped\", \"success\")\n          });\n      }\n    }\n\n    delete(){\n\n          Gofi.deleteNode(this.state.graphid, this.props.nid).then(data =>{\n              Notifier.createAlert(\"Node: \"+this.props.title+\" has been Deleted\", \"success\")\n          });\n\n    }\n\n    _closeModal = ()  => {\n        this.setState({ showModal: false });\n    };\n\n    _showModal = () => {\n        console.log(\"DTAT\",this.props)\n        let data = {}\n        try{\n            data = JSON.parse(this.props.meta)\n        }catch (e) {}\n\n        this.props.setModal(this.props.title, this.props.params, data, \"EDIT\", this.props.nid);\n    }\n\n  render() {\n    let { grid } = this.props;\n    let tlist = this.props.meta\n    if(tlist === undefined){\n        tlist = []\n    }\n\n    //let { selected } = this.state;\n\n    //let nodeClass = \"node\" + (selected ? \" selected\" : \"\");\n\n    return (\n      <div\n        onDoubleClick={e => {\n          this.handleClick(e);\n        }}\n      >\n        <Draggable\n          position={{ x: this.props.pos.x, y: this.props.pos.y }}\n          handle=\".node\"\n          grid={grid}\n          onStart={(event, ui) => this.handleDragStart(event, ui)}\n          onStop={(event, ui) => this.handleDragStop(event, ui)}\n          onDrag={(event, ui) => this.handleDrag(event, ui)}\n        >\n            <section style={nodestyle}>\n                <div>\n                <NodeInputList\n                items={this.props.inputs}\n                onCompleteConnector={index => this.onCompleteConnector(index)}\n                />\n                <NodeOuputList\n                items={this.props.outputs}\n                onStartConnector={index => this.onStartConnector(index)}\n                />\n                </div>\n                <div className={\"node\"}>\n                    <div style={{\n                            \"height\": \"40px\",\n                            \"backgroundColor\": \"#337ab7\",\n                            \"width\": \"100%\",\n                            \"padding\":\"0px\",\n                            \"fontSize\": \"18px\",\n                            \"color\": \"white\",\n                    }}>\n                    <p style={{\"padding\":\"10px\", \"margin\":\"0px\"}}>{this.props.title}</p>\n                    <span style={{\"position\":\"absolute\",\"top\": 0, \"right\": 0, \"padding\": \"12px\"}}>\n                        <StatusIcon icon={this.state.status.status}/>\n                    </span>\n\n                </div>\n                <ul className=\"nav\">\n                    <Startbtn start={this.state.status.status!==\"ACTIVE\"} onclicked={() => this.switchProcess()}/>\n                    <li><a onClick={() => this._showModal()}><Icon iconName=\"EditMirrored\"/> </a></li>\n                    <li><a onClick={() => this.delete()} className=\"\"><Icon iconName=\"Delete\"/> </a></li>\n                    <li><a className=\"active\"><Icon iconName=\"Down\"/> {this.state.status.received_msg}</a></li>\n                    <li><a className=\"active\"><Icon iconName=\"Up\"/> {this.state.status.sent_msg}</a></li>\n                </ul>\n\n                <table className=\"zui-table zui-table-horizontal\" style={{width:\"100%\"}}>\n                    <tbody>\n                    <tr>\n                        <td>Status</td><td>{this.state.status.status}</td>\n                    </tr>\n                    <tr>\n                        <td>Messages Sent</td><td>{this.state.status.sent_msg}</td>\n                    </tr>\n                    <tr>\n                        <td>Messages Received</td><td>{this.state.status.received_msg}</td>\n                    </tr>\n\n                    {/*{tlist.map(function(row, ri) {*/}\n                        {/*return (*/}\n                        {/*<tr key={ri}>*/}\n                        {/*{Object.entries(row).map(function(column, ci) {*/}\n                            {/*return <td key={ci}>{column}</td>; })}*/}\n                        {/*</tr>); })}*/}\n                    </tbody>\n                </table>\n                </div>\n            </section>\n        </Draggable>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    todos: state.todos,\n});\nconst mapDispatchToProps = {\n    addTodo,\n    toggleModal,\n    setModal\n\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(onClickOutside(Node));\n","import React from 'react';\n\n\nexport default class TrashIcon extends React.Component {\n\n    handleClick(e) {\n      if (this.props.onClick) {\n        this.props.onClick(e)\n      }\n    }\n\n    render() {\n        let {position} = this.props\n        return (\n            <g className=\"trash-icon\" fill=\"none\" stroke=\"none\" strokeWidth=\"1\"\n               transform={`translate(${position.x - 6},${position.y + 15})`}\n               onClick={(e) => {this.handleClick(e)}}\n            >\n              <circle className=\"trash-icon-bg\" cx={7} cy={7} r=\"14\"  fill=\"#337ab7\" />\n              <g className=\"trash-icon-trashcan\" fill=\"#FFFFFF\" transform=\"translate(-336.000000, -192.000000)\">\n                <path d=\"M347.999959,195 L350,195 L350,196 L349,196 L349,207.001498 C349,207.552511 348.554265,208 348.004423,208 L338.995577,208 C338.444837,208 338,207.552955 338,207.001498 L338,196 L337,196 L337,195 L338.995577,195 L339.000042,195 L339,194.990631 L339,193.009369 C339,192.443353 339.446616,192 339.997545,192 L347.002455,192 C347.553689,192 348,192.45191 348,193.009369 L348,194.990631 Z M340,194 L340,195 L347,195 L347,194 C347,193.447715 346.552285,193 346,193 L341,193 C340.447715,193 340,193.447715 340,194 Z M339,196 L339,207 L348,207 L348,196 Z M341,197 L342,197 L342,206 L341,206 Z M343,197 L344,197 L344,206 L343,206 Z M345,197 L345,206 L346,206 L346,197 L345,197 Z M345,197\" id=\"Rectangle 159\"/>\n              </g>\n            </g>\n        );\n    }\n}","import React from \"react\";\nimport onClickOutside from \"react-onclickoutside\";\n\nimport TrashIcon from \"./TrashIcon\";\n\nclass Spline extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false,\n      position: { x: 0, y: 0 }\n    };\n  }\n\n  handleClick(e) {\n    this.setState({\n      selected: !this.state.selected,\n      position: this.props.mousePos\n    });\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  }\n\n  handleClickOutside(e) {\n    this.setState({ selected: false });\n\n    if (this.props.onClickOutside) {\n      this.props.onClickOutside(e);\n    }\n  }\n\n  handleRemove(e) {\n    this.setState({ selected: false });\n\n    if (this.props.onRemove) {\n      this.props.onRemove(e);\n    }\n  }\n\n\n\n\n\n    drawPath(startX, startY, endX, endY) {\n\n        var arc1 = 0; var arc2 = 1; var arcSize = 20;\n        var deltaX = arcSize;\n        var deltaY = arcSize;\n        if ((startY > endY)){\n            arc1 = 1;\n            arc2 = 0;\n            deltaY = -arcSize;\n            if((startX-endX > 0)){\n                arc1 = 0;\n                arc2 = 1;\n            }\n        }else {\n            if((startX-endX > 0)){\n                arc1 = 1;\n                arc2 = 0;\n            }\n        }\n\n        if (startX > endX) {\n            deltaX = -arcSize;\n        }\n\n        let vf = (startX+((endX-startX)/2)-deltaX);\n\n        if(Math.abs(startY-endY) > 30){\n            return (\"M\" + startX + \" \" + startY +\n                \" H\" + vf +\n                \" A\" + deltaX + \" \" + deltaY + \" 0 0 \" + arc2 + \" \" + (vf + deltaX) + \" \" + (startY + deltaY) +\n                \" V\" + (endY - deltaY) +\n                \" A\" + deltaX + \" \" + deltaY + \" 0 0 \" + arc1 + \" \" + (vf + (deltaX * 2)) + \" \" + (endY) +\n                \" H\" + (endX)\n            );\n        }\n        return (\"M\" + startX + \" \" + startY + \"L\" + endX + \" \" + endY );\n\n    }\n\n\n\n  render() {\n    let { selected, position } = this.state;\n\n    let { start, end } = this.props;\n\n      let pathString = this.drawPath(\n          start.x, // start x\n          start.y, // start y\n          end.x, // end x\n          end.y\n      ); // end y\n\n\n    let className = \"connector\" + (selected ? \" selected\" : \"\");\n\n    return (\n      <g>\n        <path\n          strokeDasharray=\"5,5\"\n          className=\"connector-click-area\"\n          d={pathString}\n          onClick={e => {\n            this.handleClick(e);\n          }}\n        />\n        <path\n          strokeDasharray=\"5,5\"\n          className={className}\n          d={pathString}\n          onClick={e => {\n            this.handleClick(e);\n          }}\n        />\n          <circle cx={start.x-1} cy={start.y-1} style={{zIndex:9999999}} r=\"9\" fill=\"#337ab7\" />\n          <circle cx={end.x+2} cy={end.y+1}  style={{zIndex:9999999}} r=\"9\" fill=\"#9191A8\" />\n        {selected ? (\n          <TrashIcon\n            position={position}\n            onClick={e => {\n              this.handleRemove(e);\n            }}\n          />\n        ) : null}\n      </g>\n    );\n  }\n\n  bezierCurve(a, b, cp1x, cp1y, cp2x, cp2y, x, y) {\n    return `M${a},${b} C${cp1x},${cp1y} ${cp2x},${cp2y}  ${x},${y}`;\n  }\n\n  distance(a, b) {\n    return Math.sqrt((b[0] - a[0]) * (b[0] - a[0]) + (b[1] - a[1]) * (b[1] - a[1]));\n  }\n}\n\nexport default onClickOutside(Spline);\n","import React, { Component } from 'react';\n\nexport default class SVGComponent extends Component {\n  render() {\n    return <svg style={{position:'absolute', zIndex:0}} {...this.props} ref=\"svg\">{this.props.children}</svg>;\n  }\n}","/* not bound to style, should be computed */\n\nexport function computeInOffsetByIndex(x,y,index) {\n\tlet outx = x - 1;\n\tlet outy = y + ((93 + (index * 35))/2) -2;\n\n\treturn {x:outx, y:outy};\n}\n\nexport function computeOutOffsetByIndex(x,y,index) {\n\n\tlet outx = x + 310;\n    let outy = y + ((93 + (index * 35))/2);\n\n\treturn {x:outx, y:outy};\n\n}","import React from \"react\";\nimport Node from \"./lib/Node\";\nimport Spline from \"./lib/Spline\";\nimport SVGComponent from \"./lib/SVGComponent\";\n\nimport { computeOutOffsetByIndex, computeInOffsetByIndex } from \"./lib/util\";\n\n\n\nexport default class index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.data,\n      source: [],\n      dragging: false,\n      showModal:false\n    };\n\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.onMouseMove);\n    document.addEventListener(\"mouseup\", this.onMouseUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.removeEventListener(\"mouseup\", this.onMouseUp);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ data: nextProps.data});\n  }\n\n  onMouseUp(e) {\n    this.setState({ dragging: false });\n  }\n\n  onMouseMove(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const { svgComponent: { refs: { svg } } } = this.refs;\n\n    //Get svg element position to substract offset top and left\n    const svgRect = svg.getBoundingClientRect();\n\n    if(svgRect.top >0){\n        this.setState({\n            mousePos: {\n                x: e.pageX - svgRect.left,\n                y: e.pageY - svgRect.top,\n            }\n        });\n    } else {\n        this.setState({\n            mousePos: {\n                x: e.pageX - svgRect.left,\n                y: e.pageY - 15\n            }\n        });\n    }\n\n  }\n\n  handleNodeStart(nid) {\n    this.props.onNodeStartMove(nid);\n  }\n\n  handleNodeStop(nid, pos) {\n    this.props.onNodeMove(nid, pos);\n  }\n\n  calculateHeight(nodes){\n    let h =  Math.max.apply(Math, nodes.map(function(o) { return o.meta.y; }))+250;\n    if(h === -Infinity)\n    {\n      return \"100%\"\n    }\n    return h+\"px\"\n  }\n\n  calculateWidth(nodes){\n        let h =  Math.max.apply(Math, nodes.map(function(o) { return o.meta.x; }))+300;\n        if(h > document.body.clientWidth){\n            return h+\"px\"\n        }\n        return \"100%\"\n\n    }\n  handleNodeMove(index, pos) {\n    let d = this.state.data;\n\n    d.nodes[index].meta.x = pos.x;\n    d.nodes[index].meta.y = pos.y;\n\n\n    // this.setState({\n    //     data: d\n    // });\n\n\n  }\n\n  handleStartConnector(nid, outputIndex) {\n    this.setState({ dragging: true, source: [nid, outputIndex] });\n  }\n\n  handleCompleteConnector(nid, inputIndex) {\n    if (this.state.dragging) {\n      let nodes = this.state.data.nodes;\n      let fromNode = this.getNodebyId(nodes, this.state.source[0]);\n      let toNode = this.getNodebyId(nodes, nid);\n\n      this.props.onNewConnector(fromNode.id, toNode.id);\n    }\n    this.setState({ dragging: false });\n  }\n\n  handleRemoveConnector(connector) {\n    if (this.props.onRemoveConnector) {\n      this.props.onRemoveConnector(connector);\n    }\n  }\n\n  handleNodeSelect(nid) {\n    if (this.props.onNodeSelect) {\n      this.props.onNodeSelect(nid);\n    }\n  }\n\n  handleNodeDeselect(nid) {\n    if (this.props.onNodeDeselect) {\n      this.props.onNodeDeselect(nid);\n    }\n  }\n\n  computePinIndexfromLabel(pins, pinLabel) {\n    let reval = 0;\n\n    for (let pin of pins) {\n      if (pin.name === pinLabel) {\n        return reval;\n      } else {\n        reval++;\n      }\n    }\n  }\n\n  getNodebyId(nodes, nid) {\n    let reval = 0;\n\n    for (let node of nodes) {\n      if (node.id === nid) {\n        return nodes[reval];\n      } else {\n        reval++;\n      }\n    }\n  }\n\n  _closeModal = ()  => {\n      this.setState({ showModal: false });\n  };\n\n  _showModal = ()  => {\n      this.setState({ showModal: true });\n  };\n\n  render() {\n    let { data, mousePos, dragging } = this.state;\n    let { grid } = this.props;\n\n    let connectors = data.connections;\n\n    let nodes = data.nodes;\n    let newConnector = null;\n    let height = this.calculateHeight(nodes);\n    let width = this.calculateWidth(nodes);\n\n    if (dragging) {\n\n        let sourceNode = this.getNodebyId(nodes, this.state.source[0]);\n        let connectorStart = computeOutOffsetByIndex(\n            sourceNode.meta.x,\n            sourceNode.meta.y,\n            3\n            //sourceNode.list.length\n        );\n        const {svgComponent: {refs: {svg}}} = this.refs;\n        const svgRect = svg.getBoundingClientRect();\n        let connectorEnd = {x: this.state.mousePos.x, y: this.state.mousePos.y};\n        if (svgRect.top < 0) {\n            connectorEnd = {x: this.state.mousePos.x, y: this.state.mousePos.y - svgRect.top +15};\n        }\n        newConnector = <Spline start={connectorStart} end={connectorEnd} />;\n    }\n\n    let splineIndex = 0;\n\n    return (\n      <div id=\"test\" className={dragging ? \"dragging\" : \"\"}>\n        {nodes.map((node, i) => {\n          return (\n            <Node\n              key={node.id}\n              index={i}\n              nid={node.id}\n              title={node.type}\n             // inputs={node.fields.in}\n             // outputs={node.fields.out}\n              meta={node.params}\n              graphid={this.props.graphid}\n              status={node.status}\n              grid={grid}\n              pos={{ x: node.meta.x, y: node.meta.y }}\n              onNodeStart={nid => this.handleNodeStart(nid)}\n              onNodeStop={(nid, pos) => this.handleNodeStop(nid, pos)}\n              onNodeMove={(index, pos) => this.handleNodeMove(index, pos)}\n              onStartConnector={(nid, outputIndex) => this.handleStartConnector(nid, outputIndex)}\n              onCompleteConnector={(nid, inputIndex) =>\n                this.handleCompleteConnector(nid, inputIndex)\n              }\n              onNodeSelect={nid => {\n                this.handleNodeSelect(nid);\n              }}\n              onNodeDeselect={nid => {\n                this.handleNodeDeselect(nid);\n              }}\n            />\n          );\n        })}\n\n        {/* render our connectors */}\n\n        <SVGComponent height={height} width={width} ref=\"svgComponent\">\n          {connectors.map(connector => {\n            let fromNode = this.getNodebyId(nodes, connector.input_node);\n            let toNode = this.getNodebyId(nodes, connector.output_node);\n\n\n            if(toNode === undefined || fromNode === undefined){\n              return (<div key={connector.nid}/>);\n            }\n\n            let splinestart = computeOutOffsetByIndex(\n              fromNode.meta.x,\n              fromNode.meta.y,\n              3\n              //fromNode.list.length\n              //this.computePinIndexfromLabel(fromNode.fields.in, connector.output_node)\n            );\n            let splineend = computeInOffsetByIndex(\n              toNode.meta.x,\n              toNode.meta.y, 3\n              //toNode.list.length\n              //this.computePinIndexfromLabel(toNode.fields.in, connector.input_node)\n            );\n            //console.log(splinestart, splineend)\n            return (\n              <Spline\n                start={splinestart}\n                end={splineend}\n                height={height}\n                key={splineIndex++}\n                mousePos={mousePos}\n                onRemove={() => {\n                  this.handleRemoveConnector(connector);\n                }}\n              />\n            );\n          })}\n\n          {/* this is our new connector that only appears on dragging */}\n          {newConnector}\n        </SVGComponent>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport {Notify} from './Notify'\n\nimport \"../status.css\"\nimport connect from \"react-redux/es/connect/connect\";\nimport PropTypes from 'prop-types'; // You need to add this dependency\n\nclass Controls extends React.Component {\n\n    static contextTypes = {\n        router: PropTypes.object\n    }\n\n    getItems = () => {\n        console.log(this.props)\n        return [\n            {\n                key: 'backitem',\n                name: '',\n                iconProps: {\n                    iconName: 'Back'\n                },\n                ariaLabel: 'New. Use left and right arrow keys to navigate',\n                onClick: this.context.router.history.goBack\n            },\n            {\n                key: 'newItem',\n                name: 'New',\n                cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n                iconProps: {\n                    iconName: 'Add'\n                },\n                ariaLabel: 'New. Use left and right arrow keys to navigate',\n                subMenuProps: {\n                    items: this.props.list.map(prop => {\n                        return {\n                            key: prop.type,\n                            name: \"New \" + prop.type.toLowerCase() + \" node\",\n                            iconProps: {\n                                iconName: 'PageAdd'\n                            },\n                            onClick: (e) => this.props.createNode(e, prop)\n                        }\n                    })\n\n                }\n            },\n            {\n                key: 'export',\n                name: 'Export',\n                iconProps: {\n                    iconName: 'Download'\n                },\n                onClick: () => this.props.export()\n            }\n        ];\n    };\n\n    getFarItems = () => {\n        return [\n            {\n                key: 'sort',\n                name: 'Sort',\n                iconProps: {\n                    iconName: 'SortLines'\n                },\n                onClick: () => alert(\"Currently this feature has not been implemented\")\n            },\n            {\n                key: 'tile',\n                name: 'Grid view',\n                iconProps: {\n                    iconName: 'Tiles'\n                },\n                iconOnly: true,\n                onClick: () => this.props.view()\n            },\n            {\n                key: 'info',\n                name: 'Info',\n                iconProps: {\n                    iconName: 'Info'\n                },\n                iconOnly: true,\n                onClick: () => alert(\"Currently this feature has not been implemented\")\n            }\n        ];\n    };\n\n    render() {\n        return (\n            <div className=\"controls\">\n                <CommandBar\n                    items={this.getItems()}\n                    farItems={this.getFarItems()}\n                    ariaLabel={'Use left and right arrow keys to navigate between commands'}\n                />\n                <Notify></Notify>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    list: state.editNode.list\n});\n\n\nexport default connect(\n    mapStateToProps\n)(Controls);\n\n\n\n","import React from 'react';\nimport {IconButton, Modal,} from 'office-ui-fabric-react';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport {Gofi} from \"../utils/gofiAPI\";\nimport {Notifier} from \"./Notify\";\nimport {addTodo, toggleModal} from \"../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nclass EditModal extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            model: [],\n            params:{}\n        };\n    }\n\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log(this.props, nextProps, nextContext )\n       this.setState({params : nextProps.editNode.params})\n    }\n\n    inputChangeHandlerParams = (event) => {\n        let params = this.state.params;\n        params[event.target.name] = event.target.value;\n        this.setState({params:params});\n    }\n\n    submitChangeHandler = () => {\n        let model = {\n            type: this.props.editNode.type,\n            meta: {\"x\": 10, \"y\": 100},\n            params: JSON.stringify(this.state.params)\n        };\n        let _that = this;\n\n        console.log(\"MODE\", this.props.editNode.mode, this.props.editNode.id);\n        if(this.props.editNode.mode === \"CREATE\") {\n            Gofi.createNode(this.props.id, model).then(data => {\n                Notifier.createAlert(\"Node Created\", \"success\")\n                    _that.props.toggleModal();\n                }\n            ).catch(error => {\n                console.log(error.response)\n                Notifier.createAlert(error.response.data)\n                _that.props.toggleModal();\n            })\n        }else if(this.props.editNode.mode === \"EDIT\") {\n            console.log(\"MODE\", this.props.editNode.mode, this.props.editNode.id);\n            Gofi.editNode(this.props.id, model, this.props.editNode.id).then(data => {\n                Notifier.createAlert(\"Node Edited\", \"success\")\n                    _that.props.toggleModal();\n                }\n            ).catch(error => {\n                Notifier.createAlert(error.message)\n                _that.props.toggleModal();\n            })\n        }\n\n    };\n\n    cancelChangeHandler = () => {\n        this.setState({parmas:{}})\n        this.props.toggleModal();\n    };\n\n    render() {\n        let model = this.props.editNode.list.filter(list => list.type===this.props.editNode.type)[0];\n        if (model === undefined || model=== null){\n            model = []\n        }else if(model.params !== undefined && model.params !== null){\n            model = model.params\n        } else{\n            model = []\n        }\n\n        console.log(\"RENDER\", model)\n        return (\n            <Modal\n                titleAriaId=\"titleId\"\n                subtitleAriaId=\"subtitleId\"\n                isOpen={this.props.editNode.showModal}\n                onDismiss={this.props.toggleModal}\n                isBlocking={false}\n                containerClassName=\"ms-modalExample-container\"\n            >\n                <div className=\"ms-modalExample-header\">\n                    <span id=\"titleId\">Create {this.props.editNode.type} Node</span>\n                    <IconButton style={{\"position\":\"absolute\", \"right\":\"10px\"}} onClick={()=>{this.props.toggleModal()}} iconProps={{ iconName: 'ChromeClose' }} title=\"Close\" ariaLabel=\"Close\" />\n                </div>\n                <div id=\"subtitleId\" className=\"ms-modalExample-body\">\n                    {model.map((d) => {\n                        return (\n                            <div className=\"uk-margin\">\n                                <TextField label={d} placeholder={d} required={true} name={d}  value={this.state.params[d]} onChange={this.inputChangeHandlerParams} />\n                            </div>\n                        )\n                    })}\n                    <div style={{\"float\":\"right\",\"marginTop\":\"10px\"}}>\n                    <DefaultButton\n                        data-automation-id=\"test\"\n                        allowDisabledFocus={true}\n                        text=\"Cancel\"\n                        onClick={this.cancelChangeHandler}\n                    />\n                    <PrimaryButton\n                        data-automation-id=\"test\"\n                        text=\"Submit\"\n                        onClick={this.submitChangeHandler}\n                        allowDisabledFocus={true}\n                    />\n                    </div>\n\n                </div>\n            </Modal>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    editNode : state.editNode\n});\n\nconst mapDispatchToProps = {\n    addTodo,\n    toggleModal\n\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditModal);\n","import React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport {Notify} from './Notify'\n\nimport \"../status.css\"\nimport connect from \"react-redux/es/connect/connect\";\nimport PropTypes from 'prop-types';\nimport {Gofi} from \"../utils/gofiAPI\"; // You need to add this dependency\nimport { DetailsList, DetailsListLayoutMode, Selection, SelectionMode, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\n\nclass GraphListItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: \"\",\n            nid: props.id,\n            graphid: props.graphid\n\n        };\n    }\n    componentDidMount() {\n       // this.getStatus();\n        //this.interval = setInterval(() => {this.getStatus()}, 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    getStatus(){\n        Gofi.getStatus(this.state.nid).then(\n            status => {\n                this.setState({status:status})\n            }\n        );\n    }\n\n    render() {\n        return (\n            <tr className=\"ms-Table-row\">\n                <td>{this.props.id}</td>\n                <td>{this.props.type}</td>\n                <td>{this.state.status.status}</td>\n                <td>{this.state.status.sent_msg}</td>\n                <td>{this.state.status.received_msg}</td>\n            </tr>\n        )\n    }\n}\n\n\n\n\nclass GraphList extends React.Component {\n\n    static contextTypes = {\n        router: PropTypes.object\n    }\n    constructor(){\n        super()\n        this.state = {\n            nodes:[]\n        }\n    }\n\n    componentDidMount() {\n        this.getAlldata();\n        this.interval = setInterval(() => {this.getAlldata()}, 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    getAlldata(){\n        var prom = []\n        var nodes = this.props.data.nodes;\n        let _this = this\n        console.log(nodes)\n        nodes.map((node, i) => {\n            prom.push(Gofi.getStatus(node.id))\n        })\n        Promise.all(prom).then(function (val) {\n            const newArray = nodes.map((item) => item.status = val.filter(v => v.id === item.id)[0])\n            console.log(val);\n            console.log(nodes);\n            _this.setState({\"nodes\": nodes})\n        })\n    }\n\n    render() {\n        const _columns = [\n            {\n                key: 'column2',\n                name: 'id',\n                fieldName: 'id',\n                minWidth: 210,\n                maxWidth: 350,\n                data: 'string',\n                isPadded: true\n            },\n            {\n                key: 'column3',\n                name: 'Type',\n                fieldName: 'type',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'number',\n                isPadded: true\n            },\n            {\n                key: 'column4',\n                name: 'Status',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'string',\n                isPadded: true,\n                onRender: (item) => {\n                    return <span>{item.status.status}</span>;\n                }\n            },\n            {\n                key: 'column5',\n                name: 'Messages Sent',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'number',\n                isPadded: true,\n                onRender: (item) => {\n                    return <span>{item.status.sent_msg}</span>;\n                }\n            },\n            {\n                key: 'column6',\n                name: 'Messages Received',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'number',\n                isPadded: true,\n                onRender: (item) => {\n                    return <span>{item.status.received_msg}</span>;\n                }\n            },\n\n        ];\n        return (\n            <DetailsList\n                items={this.state.nodes}\n                compact={false}\n                columns={_columns}\n                selectionMode={SelectionMode.none}\n                setKey=\"set\"\n                layoutMode={DetailsListLayoutMode.justified}\n                isHeaderVisible={true}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    list: state.editNode.list\n});\n\n\nexport default connect(\n    mapStateToProps\n)(GraphList);\n\n\n\n","import React from 'react';\nimport { identity} from '../utils';\nimport { menuItems as defaultMenuItems, farMenuItems as defaultFarMenuItems } from '../components/items.js';\nimport ReactNodeGraph from \"../react-node-graph\";\nimport ReactJson from 'react-json-view'\nimport Controls from \"../components/Controls\";\nimport {Gofi} from \"../utils/gofiAPI\";\nimport {Notifier} from \"../components/Notify\";\nimport EditModal from \"../components/EditModal\";\nimport {addTodo, setModal, toggleModal} from \"../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {IconButton} from \"office-ui-fabric-react\";\n\nimport GraphList from \"../components/GraphList\"\n\nclass Content extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          nodes: [],\n          connections:[],\n          toggle: false,\n          viewtoggle: false,\n          paramsList: [],\n          model: [],\n          type:{},\n          id: props.match.params.id\n      };\n      this.createNode = this.createNode.bind(this);\n      this.exportToggle = this.exportToggle.bind(this);\n      this.viewToggle = this.viewToggle.bind(this);\n  }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n\n  }\n\n  getGraph(){\n      Gofi.getGraph(this.state.id).then(\n          graph => {\n\n              if(this.state.nodes.length !== graph.nodes.length || this.state.connections.length !== graph.connections.length){\n                  this.setState(graph)\n                 // console.log(graph)\n              }\n          }\n      );\n  }\n  componentDidMount() {\n    this._hasMounted = true;\n    this.getGraph();\n\n    this.interval = setInterval(() => {\n       this.getGraph();\n    }, 500);\n  }\n\n  _onSelectionChanged = () => {\n    if (this._hasMounted) this.forceUpdate();\n  }\n\n\n    onNewConnector(fromNode, toNode ) {\n        // let connections = [\n        //     ...this.state.connections,\n        //     {\n        //         input_node: fromNode,\n        //         output_node: toNode,\n        //     }\n        // ];\n        // this.setState({ connections: connections });\n\n        Gofi.createConnection(this.state.id, {\n                    input_node: fromNode,\n                    output_node: toNode,\n                }).then(data =>{\n                    Notifier.createAlert(\"Connection Has been created\", \"success\");\n        })\n\n        console.log(this.state)\n    }\n\n    onRemoveConnector(connector) {\n        Gofi.deleteConnection(this.state.id, connector.nid).then(data =>{\n            Notifier.createAlert(\"Connection Has been deleted\", \"success\");\n        })\n        // let connections = [...this.state.connections];\n        // connections = connections.filter(connection => {\n        //     return connection !== connector;\n        // });\n        //\n        // this.setState({ connections: connections });\n        console.log(connector)\n    }\n\n    onNodeMove(nid, pos) {\n\n\n        let _node = {\n            id: nid,\n            meta: pos\n        }\n        Gofi.updateNode(this.state.id,_node)\n        console.log(\"end move\", _node);\n    }\n\n    onNodeStartMove(nid) {\n        console.log(\"start move : \" + nid);\n    }\n\n    handleNodeSelect(nid) {\n        console.log(\"node selected : \" + nid);\n    }\n\n    handleNodeDeselect(nid) {\n        console.log(\"node deselected : \" + nid);\n    }\n\n    exportToggle(){\n        this.setState({toggle: !this.state.toggle})\n    }\n    viewToggle(){\n        this.setState({viewtoggle: !this.state.viewtoggle})\n    }\n\n    createNode(e, prop) {\n        this.props.setModal(prop.type, prop.params, {}, \"CREATE\");\n    }\n\n    addSinkNode(e) {\n        let obj = {\n            type: \"SINK\",\n            meta: {\n                x: Math.ceil(e.clientX / 10) * 20,\n                y: Math.ceil(e.clientY / 10) * 20,\n            },\n            params: \"\",\n        };\n        Gofi.createNode(this.state.id, obj).then(data => {\n            Notifier.createAlert(\"Node has been created\", \"success\");\n        })\n    }\n\n    addTODO(){\n        console.log(this.props)\n        this.props.toggleModal();\n\n\n    }\n\n\n\n  render() {\n\n      console.log()\n    return (\n      <div className=\"container\" ref=\"test\" >\n          <Controls createNode={this.createNode} export={this.exportToggle} view={this.viewToggle}/>\n          <EditModal id={this.state.id}/>\n\n          <div>\n              {this.state.viewtoggle ? (\n                  <GraphList data={this.state} graphid={this.state.id}/>\n              ) : (\n                  <ReactNodeGraph\n                      data={this.state}\n                      graphid={this.state.id}\n                      grid={[1, 1]}\n                      onNodeMove={(nid, pos) => this.onNodeMove(nid, pos)}\n                      onNodeStartMove={nid => this.onNodeStartMove(nid)}\n                      onNewConnector={(n1, o, n2, i) => this.onNewConnector(n1, o, n2, i)}\n                      onRemoveConnector={connector => this.onRemoveConnector(connector)}\n                      onNodeSelect={nid => {\n                          this.handleNodeSelect(nid);\n                      }}\n                      onNodeDeselect={nid => {\n                          this.handleNodeDeselect(nid);\n                      }}\n                  />\n              )}\n          </div>\n\n\n\n\n\n\n\n          { this.state.toggle &&\n              <div style={{\"position\": \"absolute\", \"top\": \"120px\", \"zIndex\": \"999999\", \"width\": \"100%\"}}>\n                  <div style={{\n                      \"width\": \"900px\",\n                      \"margin\": \"0 auto\",\n                      \"height\": \"30px\",\n                      \"padding\": \"1px 10px 20px 10px\",\n                      \"backgroundColor\": \"#337ab7\",\n                      \"color\": \"white\"\n                  }}>\n                      <h3>Graph Export</h3>\n                      <IconButton style={{\"float\": \"right\", \"margin-top\": \"-45px\"}} onClick={()=>{this.exportToggle()}} iconProps={{ iconName: 'ChromeClose' }} title=\"Close\" ariaLabel=\"Close\" />\n                  </div>\n                  <pre className=\"well\" style={{\n                      \"width\": \"900px\",\n                      \"margin\": \"0 auto\",\n                      \"height\": \"500px\",\n                      \"overflow\": \"auto\",\n                      \"padding\": \"10px\"\n                  }}>\n                      <ReactJson\n                          displayDataTypes={false}\n                          displayObjectSize={false}\n                          enableClipboard={true}\n                          src={{\"nodes\": this.state.nodes, \"connections\": this.state.connections}} />\n                  </pre>\n              </div>\n          }\n      </div>\n    );\n  }\n}\n\nContent.defaultProps = {\n  maxBreadcrumbs: 3,\n  breadcrumbs: [\n    { text: 'Files', 'key': 'Files', onClick: identity },\n    { text: 'This is folder 1', 'key': 'f1', onClick: identity },\n    { text: 'This is folder 2', 'key': 'f2', onClick: identity },\n    { text: 'This is folder 3', 'key': 'f3', onClick: identity },\n    { text: 'This is folder 4', 'key': 'f4', onClick: identity },\n    { text: 'Home', 'key': 'f5', onClick: identity }\n  ],\n  menuItems: defaultMenuItems,\n  farMenuItems: defaultFarMenuItems\n};\n\n\nconst mapStateToProps = state => ({\n    todos: state.todos,\n    editNode: state.editNode\n});\n\nconst mapDispatchToProps = {\n    addTodo,\n    toggleModal,\n    setModal\n\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Content);\n","import React from 'react';\nimport {Gofi} from \"../utils/gofiAPI\";\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport {DefaultButton, PrimaryButton} from 'office-ui-fabric-react/lib/Button';\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\nimport {\n    DocumentCard,\n    DocumentCardTitle,\n    DocumentCardStatus,\n} from 'office-ui-fabric-react/lib/DocumentCard';\n\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport {TextField} from \"office-ui-fabric-react\";\nimport { Link } from 'react-router-dom'\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\n\nimport {withToastManager} from \"react-toast-notifications\";\nimport {Notifier, Notify} from \"../components/Notify\";\n\nclass Home extends React.Component {\n  constructor() {\n      super();\n      this.state = {\n          graphs:[],\n          showModal:false,\n          params: {}\n      };\n  }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n\n  }\n\n  getGraph(){\n    Gofi.getAllGraphs().then(\n        graphs => {\n            this.setState({graphs:graphs})\n        }\n    )\n  }\n  componentDidMount() {\n    this._hasMounted = true;\n    this.getGraph();\n\n    this.interval = setInterval(() => {\n       this.getGraph();\n    }, 2000);\n  }\n\n    toggleModal = () =>{\n      this.setState({showModal: !this.state.showModal})\n  }\n\n    _editModal = (graph) =>{\n      this.setState({showModal: true, params:graph, type:\"EDIT\" })\n  }\n\n    showModal = () =>{\n        this.setState({showModal: true,  params:{}, type:\"CREATE\"})\n    }\n\n\n    getItems = () => {\n        return [\n            {\n                key: 'newItem',\n                name: 'New',\n                cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n                iconProps: {\n                    iconName: 'Add'\n                },\n                ariaLabel: 'New. Use left and right arrow keys to navigate',\n                onClick: () => this.showModal()\n            }\n        ];\n    };\n\n\n    getFarItems = () => {\n        return [\n            {\n                key: 'sort',\n                name: 'Sort',\n                iconProps: {\n                    iconName: 'SortLines'\n                },\n                onClick: () => alert(\"Currently this feature has not been implemented\")\n            },\n            {\n                key: 'flow',\n                name: 'Flow',\n                iconProps: {\n                    iconName: 'flow'\n                },\n                iconOnly: true,\n                onClick: () => window.location=\"#/admin\"\n            },\n            {\n                key: 'info',\n                name: 'Info',\n                iconProps: {\n                    iconName: 'Info'\n                },\n                iconOnly: true,\n                onClick: () => window.location=\"#/about-us\"\n            }\n        ];\n    };\n\n    inputChangeHandlerParams = (event) => {\n        let params = this.state.params;\n        params[event.target.name] = event.target.value;\n        this.setState({params:params});\n    }\n\n    submitChangeHandler = () => {\n        let graph = {\n            name:this.state.params.name,\n            description:this.state.params.description\n        }\n        if(this.state.type === \"CREATE\") {\n            Gofi.createGraph(graph).then(data => {\n                Notifier.createAlert(\"Graph has been created\", \"success\")\n                this.setState({ graphs: [...this.state.graphs, data] });\n                this.toggleModal();\n            })\n        } else if(this.state.type === \"EDIT\"){\n            Gofi.editGraph(this.state.params.id, graph).then(data => {\n                Notifier.createAlert(\"Graph has been edited\", \"success\")\n                this.toggleModal();\n            })\n        }\n\n\n    };\n\n    cancelChangeHandler = () => {\n        this.setState({parmas:{}})\n        this.toggleModal();\n    };\n\n\n\n\n\n\n    _showDialog = (id) => {\n        this.setState({ hideDialog: false, id: id });\n    };\n\n    _closeDialog = () => {\n        this.setState({ hideDialog: true });\n    };\n    _DeleteDialog = () => {\n        Gofi.deleteGraph(this.state.id).then( data => {\n                this.setState({hideDialog: true})\n                Notifier.createAlert(\"Graph has been deleted\", \"success\")\n            }\n        )\n    };\n\n  render() {\n      return (\n        <div style={{\"marginTop\":\"55px\"}}>\n            <CommandBar\n                items={this.getItems()}\n                farItems={this.getFarItems()}\n                ariaLabel={'Use left and right arrow keys to navigate between commands'}\n            />\n            <div className=\"ms-Grid\" dir=\"ltr\" >\n            <br/>\n                <Notify/>\n            {\n                this.state.graphs.map(graph => {\n                    return (\n                        <DocumentCard key={graph.id} className={\"ms-Grid-col ms-lg8\"}>\n                            <IconButton style={{\"position\":\"absolute\", \"right\":\"50px\"}} onClick={()=>{this._editModal(graph)}} iconProps={{ iconName: 'Edit' }} title=\"Close\" ariaLabel=\"Close\" />\n                            <IconButton style={{\"position\":\"absolute\", \"right\":\"20px\"}} onClick={() => {this._showDialog(graph.id)}} iconProps={{ iconName: 'Delete' }} title=\"Close\" ariaLabel=\"Close\" />\n                            <div className=\"ms-ConversationTile-TitlePreviewArea\">\n                                <Link to={\"/graph/\"+graph.id} style={{\"textDecoration\":\"none\"}}>\n                                    <DocumentCardTitle\n                                    title={graph.name}\n                                    shouldTruncate={true}\n                                />\n                                </Link>\n                                <DocumentCardTitle\n                                    title={graph.description}\n                                    shouldTruncate={true}\n                                    showAsSecondaryTitle={true}\n                                />\n                                <DocumentCardStatus statusIcon=\"ProcessMetaTask\" status={graph.nodes.length + \" Nodes\"} />\n                                <DocumentCardStatus statusIcon=\"ProcessMetaTask\" status={graph.connections.length + \" Connections\"} />\n                            </div>\n                        </DocumentCard>\n                    )\n                })\n            }\n            </div>\n\n\n            <Dialog\n                hidden={this.state.hideDialog}\n                onDismiss={this._closeDialog}\n                dialogContentProps={{\n                    type: DialogType.normal,\n                    title: 'Delete Graph',\n                    subText: 'Are you sure you want to delete the graph: '+ this.state.id\n                }}\n                modalProps={{\n                    titleAriaId: 'myLabelId',\n                    subtitleAriaId: 'mySubTextId',\n                    isBlocking: false,\n                    containerClassName: 'ms-dialogMainOverride'\n                }}\n            >\n                {null /** You can also include null values as the result of conditionals */}\n                <DialogFooter>\n                    <PrimaryButton onClick={this._DeleteDialog} text=\"Delete\" style={{\"background\":\"#e50040\"}} />\n                    <DefaultButton onClick={this._closeDialog} text=\"Cancel\" />\n                </DialogFooter>\n            </Dialog>\n\n            <Modal\n                titleAriaId=\"titleId\"\n                subtitleAriaId=\"subtitleId\"\n                isOpen={this.state.showModal}\n                onDismiss={this.toggleModal}\n                isBlocking={false}\n                containerClassName=\"ms-modalExample-container\"\n            >\n                <div className=\"ms-modalExample-header\">\n                    <span id=\"titleId\">Create new Graph</span>\n                    <IconButton style={{\"position\":\"absolute\", \"right\":\"10px\"}} onClick={()=>{this.toggleModal()}} iconProps={{ iconName: 'ChromeClose' }} title=\"Close\" ariaLabel=\"Close\" />\n                </div>\n                <div id=\"subtitleId\" className=\"ms-modalExample-body\">\n\n                    <div className=\"uk-margin\">\n                        <TextField label={\"Graph name\"} placeholder={\"Graph name\"} required={true} name={\"name\"}  value={this.state.params[\"name\"]} onChange={this.inputChangeHandlerParams} />\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <TextField multiline rows={5} label={\"Graph description\"} placeholder={\"Graph description\"} required={true} name={\"description\"}  value={this.state.params[\"description\"]} onChange={this.inputChangeHandlerParams} />\n                    </div>\n\n\n\n\n                    <div style={{\"float\":\"right\",\"marginTop\":\"10px\"}}>\n                        <DefaultButton\n                            data-automation-id=\"test\"\n                            allowDisabledFocus={true}\n                            text=\"Cancel\"\n                            onClick={this.cancelChangeHandler}\n                        />\n                        <PrimaryButton\n                            data-automation-id=\"test\"\n                            text=\"Submit\"\n                            onClick={this.submitChangeHandler}\n                            allowDisabledFocus={true}\n                        />\n                    </div>\n\n                </div>\n            </Modal>\n\n\n\n\n\n\n\n\n        </div>\n    );\n  }\n}\n\n\nexport default Home\n","import React from 'react';\nimport { identity} from '../utils';\nimport { menuItems as defaultMenuItems, farMenuItems as defaultFarMenuItems } from '../components/items.js';\nimport ReactNodeGraph from \"../react-node-graph\";\nimport ReactJson from 'react-json-view'\nimport Controls from \"../components/Controls\";\nimport {Gofi} from \"../utils/gofiAPI\";\nimport {Notifier} from \"../components/Notify\";\nimport EditModal from \"../components/EditModal\";\nimport {addTodo, setModal, toggleModal} from \"../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { DetailsList, DetailsListLayoutMode, Selection, SelectionMode, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport {\n    DocumentCard,\n    DocumentCardActivity,\n    DocumentCardPreview,\n    DocumentCardTitle,\n    DocumentCardType,\n    DocumentCardStatus,\n    IDocumentCardPreviewProps\n} from 'office-ui-fabric-react/lib/DocumentCard';\nimport {CommandBar} from \"office-ui-fabric-react\";\nimport PropTypes from \"prop-types\";\n\nclass AdminCard extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentWillUnmount() {}\n    componentDidMount() {\n    }\n\n    render(){\n        // const { items: originalItems } = this.props;\n        const  item  = this.props.data;\n        const _columns = [\n            {\n                key: 'column2',\n                name: 'id',\n                fieldName: 'id',\n                minWidth: 100,\n                maxWidth: 250,\n                data: 'string',\n                isPadded: true\n            },\n            {\n                key: 'column3',\n                name: 'Type',\n                fieldName: 'status',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'string',\n                isPadded: true\n            },\n            {\n                key: 'column4',\n                name: 'Status',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'string',\n                isPadded: true,\n                onRender: (item) => {\n                    return <span>{item.status}</span>;\n                }\n            },\n            {\n                key: 'column5',\n                name: 'Messages Sent',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'number',\n                isPadded: true,\n                onRender: (item) => {\n                    return <span>{item.sent_msg}</span>;\n                }\n            },\n            {\n                key: 'column6',\n                name: 'Messages Received',\n                minWidth: 70,\n                maxWidth: 90,\n                data: 'number',\n                isPadded: true,\n                onRender: (item) => {\n                    return <span>{item.received_msg}</span>;\n                }\n            },\n\n        ];\n        return (\n            <DocumentCard type={DocumentCardType.compact} className=\"adminCard\">\n                <DocumentCardTitle className=\"adminCardTitle\"\n                    title={\"Worker: \"+ item.worker}\n                    shouldTruncate={true}\n                />\n                <DocumentCardTitle\n                    title={item.ip}\n                    shouldTruncate={true}\n                    showAsSecondaryTitle={true}\n                />\n\n                <div className=\"ms-Grid\">\n                    <div className=\"ms-Grid-row\">\n                        <div className=\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\">\n                            Worker Status:\n                            <table className=\"zui-table zui-table-horizontal\" style={{width:\"100%\"}}>\n                                <tbody>\n                                <tr>\n                                    <td>Status</td><td>{item.status}</td>\n                                </tr>\n                                <tr>\n                                    <td>memory_used</td><td>{item.memory_used}</td>\n                                </tr>\n                                <tr>\n                                    <td>memory_total</td><td>{item.memory_total}</td>\n                                </tr>\n                                <tr>\n                                    <td>memory_percent</td><td>{item.memory_percent.toFixed(2)}</td>\n                                </tr>\n                                <tr>\n                                    <td>Load</td><td>{item.load}</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\">\n                            <DetailsList\n                                items={item.stats}\n                                compact={false}\n                                columns={_columns}\n                                selectionMode={SelectionMode.none}\n                                setKey=\"set\"\n                                layoutMode={DetailsListLayoutMode.justified}\n                                isHeaderVisible={true}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n\n\n\n            </DocumentCard>\n        );\n    }\n}\n\n\n\nclass Admin extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          health:{}\n      };\n  }\n\n    static contextTypes = {\n        router: PropTypes.object\n    }\n\n  componentWillUnmount() {}\n  componentDidMount() {\n      Gofi.getHealth().then(\n          health => {\n             this.setState({health:health})\n          }\n      )\n  }\n\n    getItems = () => {\n        return [\n            {\n                key: 'backitem',\n                name: '',\n                iconProps: {\n                    iconName: 'Back'\n                },\n                ariaLabel: 'New. Use left and right arrow keys to navigate',\n                onClick: this.context.router.history.goBack\n            },\n        ];\n    };\n\n  render() {\n    return (\n        <div style={{\"marginTop\":\"55px\"}}>\n            <CommandBar\n                items={this.getItems()}\n                ariaLabel={'Use left and right arrow keys to navigate between commands'}\n            />\n            <div style={{\"marginTop\":\"10px\", \"padding\":\"10px\"}}>\n            {Object.keys(this.state.health).map((key, i) => {\n                return (<AdminCard data={this.state.health[key]}/>)})}\n            </div>\n        </div>\n    );\n  }\n}\n\n\n\nexport default (Admin);\n","import React from 'react';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\n\nconst Footer = () => (\n  <div className=\"footer-container\">\n    {'© Gofi 2018. '}\n    <Link href=\"https://github.com/guzmonne/office-ui-layout/tree/01-blank-project\">Get in touch!</Link>\n    {' -- Made with '}\n    <span className=\"text-red\">♥</span>\n    {' by '}\n    <Link href=\"https://github.com/robrotheram\"> {'<@robrotheram>'}</Link>\n  </div>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport {Fabric} from 'office-ui-fabric-react/lib/Fabric';\nimport NavBar from './components/NavBar.js';\nimport Content from './pages/Content.js';\nimport Home from './pages/Home.js';\nimport Admin from './pages/Admin.js';\nimport Footer from './components/Footer.js';\nimport { Route, Switch, Link } from 'react-router-dom'\nimport './App.css';\nimport {Gofi} from \"./utils/gofiAPI\";\nimport {paramsList} from \"./actions\";\n\nconst About = () => (\n    <div style={{\"marginTop\":\"50px\", \"padding\":\"10px\"}}>\n        <h1>About Page</h1>\n        <p>Did you get here via Redux?</p>\n    </div>\n)\n\nconst NoMatch = ({ location }) => (\n    <div style={{\"marginTop\":\"50px\", \"padding\":\"10px\", \"textAlign\":\"center\"}}>\n        <h3>No match for <code>{location.pathname}</code></h3>\n        <Link to=\"/\"><h3>Click here to go back home</h3></Link>\n    </div>\n)\n\nclass App extends Component {\n\n    componentWillMount() {\n        Gofi.getParams().then(data => {\n            this.props.store.dispatch(paramsList(data))\n        });\n    }\n\n    render() {\n    return (\n            <Fabric className=\"App\">\n                <div className=\"header\">\n                    <NavBar />\n                </div>\n                <div className=\"body\">\n                    <div className=\"content\">\n                        <Switch>\n                        <Route default exact path=\"/\" component={Home} />\n                        <Route exact path=\"/about-us\" component={About} />\n                        <Route exact path=\"/admin\" component={Admin} />\n                        <Route exact path=\"/graph/:id\" component={Content} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                    </div>\n                    <div className=\"sidebar\">\n\n                    </div>\n                </div>\n                <div className=\"footer\">\n                    <Footer />\n                </div>\n            </Fabric>\n\n    );\n  }\n}\n\n\nexport default App;\n\n\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case 'SET_VISIBILITY_FILTER':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default visibilityFilter\n","\nconst todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false\n                }\n            ]\n        case 'TOGGLE_TODO':\n            return state.map(\n                todo =>\n                    todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        default:\n            return state\n    }\n}\n\nexport default todos","const defaultState = {\n    showModal : false,\n    model:  [],\n    params: {},\n    list: []\n}\n\nconst editNode = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_MODAL':\n            return Object.assign({}, state, {\n                showModal: !state.showModal\n            });\n        case 'SET_MODAL':\n            return Object.assign({}, state, {\n                type: action.mtype,\n                model: action.model,\n                params: action.params,\n                mode: action.mode,\n                id: action.id,\n                showModal: true\n            });\n        case 'SET_LIST':\n            return Object.assign({}, state, {\n                list: action.list\n            });\n\n\n        default:\n            return state\n    }\n}\n\nexport default editNode","import { combineReducers } from 'redux';\nimport visibilityFilter from './visibilityFilter'\nimport todos from './todo'\nimport editNode from './editNode'\n\nexport default combineReducers({\n    todos,\n    visibilityFilter,\n    editNode\n})","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { initializeIcons } from '@uifabric/icons';\nimport rootReducer from './reducers'\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { HashRouter } from 'react-router-dom'\n\n\nimport createHistory from 'history/createBrowserHistory'\nimport thunk from 'redux-thunk'\n\n\nconst  history = createHistory()\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\ninitializeIcons()\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n    if (typeof devToolsExtension === 'function') {\n        enhancers.push(devToolsExtension())\n    }\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\nconst store = createStore(\n    connectRouter(history)(rootReducer),\n    initialState,\n    composedEnhancers\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n        <App store={store}/>\n        </HashRouter>\n    </Provider>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}