# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import schema_pb2 as schema__pb2


class GofiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Send = channel.stream_stream(
        '/messages.Gofi/Send',
        request_serializer=schema__pb2.GofiMessage.SerializeToString,
        response_deserializer=schema__pb2.GofiMessage.FromString,
        )


class GofiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Send(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GofiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Send': grpc.stream_stream_rpc_method_handler(
          servicer.Send,
          request_deserializer=schema__pb2.GofiMessage.FromString,
          response_serializer=schema__pb2.GofiMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'messages.Gofi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
